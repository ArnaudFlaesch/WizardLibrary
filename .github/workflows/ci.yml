# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on: ["push"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.1.0

      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          npm ci

      - name: Lint
        run: |
          npm run lint:styles
          npm run lint:styles:report
          npm run eslint

      - name: Build
        run: |
          npm run build -- --base-href=https://arnaudflaesch.github.io/WizardLibrary/

      - name: Test
        run: |
          npm run test:coverage -- --no-watch --no-progress --browsers=ChromeHeadlessCI
          rm -vrf .nyc_output
          npm run e2e:ci
          rm -vrf .nyc_output

      - name: Generate coverage
        run: |
          mkdir coverage-reports || true && mkdir .nyc_output || true
          cp cypress-coverage/coverage-final.json coverage-reports/from-cypress.json
          cp karma-coverage/coverage-final.json coverage-reports/from-karma.json
          npx nyc merge coverage-reports && mv coverage.json .nyc_output/out.json
          npx nyc report --reporter=lcov --reporter=clover --report-dir coverage

      - name: Send coverage report
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage/clover.xml --project-token ${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -s https://codecov.io/bash)

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Deploy with gh-pages
        if: success() && github.ref == 'refs/heads/master'
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npx gh-pages-clean
          npx gh-pages -d dist -u "github-actions-bot <support+actions@github.com>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
